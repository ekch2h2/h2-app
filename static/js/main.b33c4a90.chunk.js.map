{"version":3,"sources":["images/no-img.png","images/icon.png","util/theme.js","redux/reducers/userReducers.js","redux/reducers/dataReducers.js","redux/reducers/uiReducers.js","redux/store.js","redux/types.js","util/auth.js","redux/actions/userActions.js","util/MyButton.js","redux/actions/dataActions.js","components/announcement/PostAnnouncement.js","components/layout/Notifications.js","components/layout/Navbar.js","util/AuthRoute.js","components/announcement/EditAnnouncement.js","components/announcement/DeleteAnnouncement.js","components/announcement/ArchiveAnnouncement.js","util/markdown_utils.js","components/announcement/ShareButton.js","components/announcement/Announcement.js","util/AnnouncementSkeleton.js","pages/home.js","pages/login.js","pages/signup.js","util/ProfileSkeleton.js","components/profile/EditDetails.js","components/profile/Profile.js","pages/user.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","rootStyles","form","textAlign","image","margin","pageTitle","textField","button","marginTop","position","customError","color","fontSize","progress","invisibleSeparator","border","visibleSeparator","width","borderBottom","marginBottom","paper","padding","profile","top","left","height","objectFit","maxWidth","borderRadius","verticalAlign","cursor","buttons","closeButton","right","initialState","authenticated","credentials","likes","notifications","loading","announcements","announcement","initalState","errors","middleware","thunk","reducers","combineReducers","user","state","action","type","payload","userHandle","handle","announcementId","filter","like","forEach","n","read","data","body","index","findIndex","ann","deleteIdx","splice","comments","UI","store","createStore","ua","window","navigator","userAgent","includes","isReduxDevToolsSupported","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","setAuthorizationHeader","token","axios","defaults","headers","common","getUserData","dispatch","get","then","res","catch","err","console","log","response","children","onClick","tip","btnClassName","tipClassName","Tooltip","title","placement","className","IconButton","getAnnouncements","map","s","clearErrors","PostAnnouncement","open","handleOpen","setState","handleClose","props","handleChange","event","target","name","value","handleSubmit","preventDefault","postAnnouncement","nextProps","nextContext","this","classes","MyButton","Dialog","onClose","fullWidth","DialogTitle","DialogContent","onSubmit","TextField","label","multiline","placeholder","error","helperText","onChange","rows","rowsMax","Button","variant","submitButton","disabled","CircularProgress","size","progressSpinner","Component","connect","newAnnouncement","post","withStyles","float","Notifications","anchorEl","onMenuOpened","unreadNotificationIds","notificationId","markNotificationsRead","notificationIcon","dayjs","extend","relativeTime","length","unreadCount","Badge","badgeContent","notificationsMarkup","verb","time","createdAt","fromNow","iconColor","icon","style","marginRight","MenuItem","key","Typography","component","Link","to","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","notificationIds","Navbar","isAnnouncementProvider","AppBar","Toolbar","rest","render","EditAnnouncement","oldPath","newPath","location","pathname","history","pushState","getAnnouncement","updateAnnouncement","handleImageChange","files","formData","FormData","append","uploadImageForPost","handleEditPicture","imageButtonRef","current","click","React","createRef","openDialog","dialogMarkup","spinnerDiv","id","hidden","ref","toolButton","expandButton","dialogContent","imageUrl","avatar","marginTo","DeleteAnnouncement","deleteAnnouncement","deleteButton","DialogActions","delete","ArchiveAnnouncement","archiveAnnouncement","archiveButton","isArchived","isListLine","match","markdownTextPreProcess","bodyFinal","prevLine","split","rawLine","line","trim","replace","ShareButton","handleShare","content","shareData","text","url","encodeURIComponent","share","canShare","Announcement","expanded","dimensions","toggleExpandContent","prevState","container","offsetWidth","offsetHeight","updateContentDimensions","prevProps","snapshot","collapsedHeight","userImage","editButton","archiveBotton","shareButton","actionsMarkup","ButtonGroup","buttonGroup","userLink","showMoreButton","clsx","showMoreContainer","showMore","Card","card","CardHeader","Avatar","alt","src","subheader","CardContent","in","timeout","onLoad","bind","source","markdownContainer","shouldShowMore","CardActions","actions","minWidth","display","h2","withStyle","cardContent","flexDirection","cover","backgroundColor","date","fullLine","halfLine","Array","from","item","CardMedia","NoImg","home","login","userData","email","password","loginUser","Grid","sm","AppIcon","noValidate","general","firebase","auth","signInWithEmailAndPassword","getIdToken","idToken","push","signup","newUserData","confirmPassword","signupUser","Paper","EditDetails","bio","website","mapUserDetailsToState","userDetails","editUserDetails","Profile","uploadImage","handleLogout","logoutUser","href","rel","format","aligh","signOut","announcementIdParam","params","announcementsMarkup","spacing","xs","createMuiTheme","themeFile","initializeApp","apiKey","onAuthStateChanged","usr","baseURL","App","basename","process","exact","path","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b33c4a90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-img.77f5794e.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.10f8d0e1.png\";","const theme = {\n    palette: {\n        primary: {\n            light: '#33c9dc',\n            main: '#00bcd4',\n            dark: '#008394',\n            contrastText: '#fff'\n        },\n        secondary: {\n            light: '#ff6333',\n            main: '#ff3d00',\n            dark: '#b22a00',\n            contrastText: '#fff'\n        }\n    },\n    typography: {\n        useNextVariants: true\n    },\n    rootStyles: {\n        form: {\n            textAlign: 'center'\n        },\n        image: {\n            margin: \"20px auto 20px auto\"\n        },\n        pageTitle: {\n            margin: \"10px auto 10px auto\"\n        },\n        textField: {\n            margin: \"10px auto 10px auto\"\n        },\n        button: {\n            marginTop: 20,\n            position: 'relative'\n        },\n        customError: {\n            color: 'red',\n            fontSize: \"0.8rem\",\n            marginTop: 10\n        },\n        progress: {\n            position: 'absolute'\n        },\n        invisibleSeparator: {\n            border: \"none\",\n            margin: 4\n        },\n        visibleSeparator: {\n            width: \"100%\",\n            borderBottom: \"1px solid rgba(0, 0, 0, 0.1)\",\n            marginBottom: 20\n        },\n        paper: {\n            padding: 20\n        },\n        profile: {\n            '& .image-wrapper': {\n                textAlign: 'center',\n                position: 'relative',\n                '& button': {\n                    position: 'absolute',\n                    top: '80%',\n                    left: '70%'\n                }\n            },\n            '& .profile-image': {\n                width: 200,\n                height: 200,\n                objectFit: 'cover',\n                maxWidth: '100%',\n                borderRadius: '50%'\n            },\n            '& .profile-details': {\n                textAlign: 'center',\n                '& span, svg': {\n                    verticalAlign: 'middle'\n                },\n                '& a': {\n                    color: '#00bcd4'\n                }\n            },\n            '& hr': {\n                border: 'none',\n                margin: '0 0 10px 0'\n            },\n            '& svg.button': {\n                '&:hover': {\n                    cursor: 'pointer'\n                }\n            }\n        },\n        buttons: {\n            textAlign: 'center',\n            '& a': {\n                margin: '20px 10px'\n            }\n        },\n        closeButton: {\n            position: \"absolute\",\n            right: \"0.2rem\",\n            top: \"0.4rem\"\n        }\n    }\n};\n\nexport default theme;","import {\n    SET_USER,\n    LOADING_USER,\n    SET_AUTHENTICATED,\n    SET_UNAUTHENTICATED,\n    LIKE_ANNOUNCEMENT,\n    UNLIKE_ANNOUNCEMENT,\n    MARK_NOTIFCATIONS_READ\n} from \"../types\";\n\nconst initialState = {\n    authenticated: false,\n    credentials: {},\n    likes: [],\n    notifications: [],\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true\n            };\n        case SET_UNAUTHENTICATED:\n            return initialState;\n        case SET_USER:\n            return {\n                loading: false,\n                authenticated: true,\n                ...action.payload\n            };\n        case LOADING_USER:\n            return {\n                ...state,\n                loading: true\n            };\n        case LIKE_ANNOUNCEMENT:\n            return {\n                ...state,\n                likes: [\n                    ...state.likes,\n                    {\n                        userHandle: state.credentials.handle,\n                        announcementId: action.payload.announcementId\n                    }\n                ]\n            };\n        case UNLIKE_ANNOUNCEMENT:\n            return {\n                ...state,\n                likes: state.likes.filter(like => like.announcementId !== action.payload.announcementId)\n            };\n        case MARK_NOTIFCATIONS_READ:\n            state.notifications.forEach(n => n.read = true);\n            return {...state};\n        default:\n            return state\n    }\n}","import {\n    SET_ANNOUNCEMENTS,\n    LIKE_ANNOUNCEMENT,\n    UNLIKE_ANNOUNCEMENT,\n    LOADING_DATA,\n    DELETE_ANNOUNCEMENT,\n    POST_ANNOUNCEMENT,\n    SET_ANNOUNCEMENT,\n    SUBMIT_COMMENT, APPEND_IMAGEURL_TO_ANNOUNCEMENT\n} from \"../types\";\n\n\nconst initialState = {\n    announcements: [],\n    announcement: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            };\n        case SET_ANNOUNCEMENTS:\n            return {\n                ...state,\n                announcements: action.payload,\n                loading: false\n            };\n        case SET_ANNOUNCEMENT:\n            return {\n                ...state,\n                announcement: action.payload\n            };\n        case APPEND_IMAGEURL_TO_ANNOUNCEMENT:\n            return {\n                ...state,\n                announcement: {\n                    ...state.announcement,\n                    body: `${state.announcement.body}\\n\\n![](${action.payload})`\n                }\n            };\n        case LIKE_ANNOUNCEMENT:\n        case UNLIKE_ANNOUNCEMENT:\n            let index = state.announcements\n                .findIndex((ann) => ann.announcementId === action.payload.announcementId);\n            state.announcements[index] = action.payload;\n            if(state.announcement.announcementId === action.payload.announcementId) {\n                state.announcement = {\n                    ...state.announcement,\n                    ...action.payload\n                }\n            }\n            return {\n                ...state\n            };\n        case DELETE_ANNOUNCEMENT:\n            let deleteIdx = state.announcements.findIndex(ann => ann.announcementId === action.payload);\n            state.announcements.splice(deleteIdx, 1);\n            return {\n                ...state\n            };\n        case POST_ANNOUNCEMENT:\n            return {\n                ...state,\n                announcements: [\n                    action.payload,\n                    ...state.announcements\n                ]\n            };\n        case SUBMIT_COMMENT:\n            return {\n                ...state,\n                announcement: {\n                    ...state.announcement,\n                    comments: [\n                        action.payload,\n                        ...state.announcement.comments\n                    ]\n                }\n            };\n        default:\n            return state;\n    }\n}","import {SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI} from \"../types\";\n\nconst initalState = {\n    loading: false,\n    errors: null\n};\n\nexport default function (state = initalState, action) {\n    switch (action.type) {\n        default:\n            return state;\n        case SET_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: action.payload\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: null\n            };\n        case LOADING_UI:\n            return {\n                ...state,\n                loading: true\n            };\n        case STOP_LOADING_UI:\n            return {\n                ...state,\n                loading: false\n            };\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport userReducer from './reducers/userReducers';\nimport dataReducer from './reducers/dataReducers';\nimport uiReducer from './reducers/uiReducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n    user: userReducer,\n    data: dataReducer,\n    UI: uiReducer\n});\n\nconst isReduxDevToolsSupported = () => {\n    const ua = window.navigator.userAgent;\n    return ua.includes('Chrome')\n        && ! ua.includes('Windows')\n        && ! ua.includes('Android')\n};\n\nconst store = createStore(reducers, initialState,\n    isReduxDevToolsSupported() ? (\n        compose(\n            applyMiddleware(...middleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        )\n    ) : (\n        compose(\n            applyMiddleware(...middleware)\n        )\n    )\n\n);\n\nexport default store;","// User reducer types\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\nexport const SET_USER = \"SET_USER\";\nexport const LOADING_USER = \"LOADING_USER\";\nexport const MARK_NOTIFCATIONS_READ = \"MARK_NOTIFCATIONS_READ\";\n// UI reducer types\nexport const SET_ERRORS = \"SET_ERRORS\";\nexport const LOADING_DATA = \"LOADING_DATA\";\nexport const LOADING_UI = \"LOADING_UI\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const STOP_LOADING_UI = \"STOP_LOADING_UI\";\n// Data reducer types\nexport const SET_ANNOUNCEMENTS = \"SET_ANNOUNCEMENTS\";\nexport const SET_ANNOUNCEMENT = \"SET_ANNOUNCEMENT\";\nexport const APPEND_IMAGEURL_TO_ANNOUNCEMENT = \"APPEND_IMAGEURL_TO_ANNOUNCEMENT\";\nexport const LIKE_ANNOUNCEMENT = \"LIKE_ANNOUNCEMENT\";\nexport const UNLIKE_ANNOUNCEMENT = \"UNLIKE_ANNOUNCEMENT\";\nexport const DELETE_ANNOUNCEMENT = \"DELETE_ANNOUNCEMENT\";\nexport const POST_ANNOUNCEMENT = \"POST_ANNOUNCEMENT\";\nexport const SUBMIT_COMMENT = \"SUBMIT_COMMENT\";","import axios from \"axios\";\n\nexport const setAuthorizationHeader = (token) => {\n    axios.defaults.headers.common[\"Authentication\"] = `Bearer ${token}`;\n};","import {\n    CLEAR_ERRORS,\n    LOADING_UI,\n    LOADING_USER,\n    MARK_NOTIFCATIONS_READ,\n    SET_ERRORS,\n    SET_UNAUTHENTICATED,\n    SET_USER\n} from \"../types\";\nimport axios from \"axios\";\nimport firebase from \"firebase/app\";\nimport { setAuthorizationHeader } from \"../../util/auth\";\n\nexport const loginUser = (userData, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    firebase.auth().signInWithEmailAndPassword(userData.email, userData.password)\n        .then(res => res.user.getIdToken())\n        .then(idToken => {\n            setAuthorizationHeader(idToken);\n            dispatch(getUserData());\n            dispatch({ type: CLEAR_ERRORS });\n            history.push('/');\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        });\n};\n\nexport const getUserData = () => (dispatch) => {\n    dispatch({ type: LOADING_USER });\n    axios.get('/user')\n        .then(res => {\n            dispatch({\n                type: SET_USER,\n                payload: res.data\n            })\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n};\n\nexport const signupUser = (newUserData, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios.post('/signup', newUserData)\n        .then(res => {\n            const data = res.data;\n            setAuthorizationHeader(data.token);\n            dispatch(getUserData());\n            dispatch({ type: CLEAR_ERRORS });\n            history.push('/');\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n};\n\nexport const logoutUser = () => (dispatch) => {\n    firebase.auth().signOut().then(() => {\n        dispatch({ type: SET_UNAUTHENTICATED })\n    })\n};\n\nexport const uploadImage = (formData) => (dispatch) => {\n    dispatch({ type: LOADING_USER });\n    axios.post(\"/user/image\", formData)\n        .then(res => {\n            dispatch(getUserData())\n        })\n        .catch(err => console.log(err))\n};\n\nexport const editUserDetails = (userDetails) => (dispatch) => {\n    dispatch({ type: LOADING_USER });\n    axios.post(\"/user\", userDetails)\n        .then(() => {\n            dispatch(getUserData());\n        })\n        .catch(err => console.log(err));\n};\n\nexport const markNotificationsRead = (notificationIds) => dispatch => {\n    axios.post(\"/notifications\", notificationIds)\n        .then(res => {\n            dispatch({\n                type: MARK_NOTIFCATIONS_READ\n            });\n        })\n        .catch(err => {\n            console.log(err);\n        })\n\n};","import React from 'react';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => {\n    return (\n        <Tooltip title={tip} placement=\"top\" className={tipClassName}>\n            <IconButton onClick={onClick} className={btnClassName}>\n                {children}\n            </IconButton>\n        </Tooltip>\n\n    )\n}\n\n","import {\n    SET_ANNOUNCEMENTS,\n    LOADING_DATA,\n    LIKE_ANNOUNCEMENT,\n    UNLIKE_ANNOUNCEMENT,\n    DELETE_ANNOUNCEMENT,\n    CLEAR_ERRORS,\n    SET_ERRORS,\n    LOADING_UI,\n    POST_ANNOUNCEMENT,\n    SET_ANNOUNCEMENT,\n    STOP_LOADING_UI,\n    SUBMIT_COMMENT,\n    LOADING_USER,\n    APPEND_IMAGEURL_TO_ANNOUNCEMENT\n} from \"../types\";\nimport axios from 'axios';\n\nexport const getAnnouncements = () => dispatch => {\n    dispatch({ type: LOADING_DATA });\n    axios.get(\"/announcements\")\n        .then(res => {\n            dispatch({\n                type: SET_ANNOUNCEMENTS,\n                payload: res.data.map(s => ({...s, announcementId: s.announcementId}))\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ANNOUNCEMENTS,\n                payload: []\n            })\n\n        })\n};\n\nexport const getAnnouncement = (announcementId) => dispatch => {\n    dispatch({ type: LOADING_UI });\n    axios.get(`/announcement/${announcementId}`)\n        .then(res => {\n            dispatch({\n                type: SET_ANNOUNCEMENT,\n                payload: {...res.data, announcementId: res.data.announcementId}\n            });\n            dispatch({\n                type: STOP_LOADING_UI\n            })\n        })\n        .catch(err => {\n            console.log(err);\n        })\n};\n\nexport const postAnnouncement = (newAnnouncement) => dispatch => {\n    dispatch({ type: LOADING_UI });\n    axios.post(\"/announcement\", newAnnouncement)\n        .then(res => {\n            dispatch({\n                type: POST_ANNOUNCEMENT,\n                payload: {...res.data, announcementId: res.data.announcementId}\n            });\n            dispatch(clearErrors())\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n};\n\nexport const updateAnnouncement = (announcementId, body) => dispatch => {\n    dispatch({ type: LOADING_UI });\n    axios.post(`/announcement/${announcementId}`, { body: body })\n        .then(() => {\n            dispatch(getAnnouncements());\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n};\n\nexport const likeAnnouncement = (announcementId) => dispatch => {\n    axios.get(`/announcement/${announcementId}/like`)\n        .then(res => {\n            dispatch({\n                type: LIKE_ANNOUNCEMENT,\n                payload: {...res.data, announcementId: res.data.announcementId}\n            })\n        })\n        .catch(err => console.log(err))\n};\n\nexport const unlikeAnnouncement = (announcementId) => dispatch => {\n    axios.get(`/announcement/${announcementId}/unlike`)\n        .then(res => {\n            dispatch({\n                type: UNLIKE_ANNOUNCEMENT,\n                payload: {...res.data, announcementId: res.data.announcementId}\n            })\n        })\n        .catch(err => console.log(err))\n};\n\nexport const deleteAnnouncement = (announcementId) => dispatch => {\n    axios.delete(`/announcement/${announcementId}`)\n        .then(() => {\n            dispatch({\n                type: DELETE_ANNOUNCEMENT, payload: announcementId\n            })\n        })\n        .catch(err => console.log(err));\n};\n\nexport const archiveAnnouncement = (announcementId) => dispatch => {\n    axios.post(`/announcement/${announcementId}`, { isArchived: true })\n        .then(() => {\n            dispatch(getAnnouncements());\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        });\n};\n\nexport const submitComment = (announcementId, commentData) => dispatch => {\n    axios.post(`/announcement/${announcementId}/comment`, commentData)\n        .then(res => {\n            dispatch({\n                type: SUBMIT_COMMENT,\n                payload: res.data\n            });\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n};\n\nexport const getUserData = (userHandle) => dispatch => {\n    dispatch({ type: LOADING_DATA });\n    axios.get(`/user/${userHandle}`)\n        .then((res) => {\n            dispatch({\n                type: SET_ANNOUNCEMENTS,\n                payload: res.data.announcements\n            })\n        })\n        .catch(() => {\n            dispatch({\n                type: SET_ANNOUNCEMENTS,\n                payload: null\n            });\n        });\n};\n\nexport const clearErrors = () => dispatch => {\n    dispatch({ type: CLEAR_ERRORS })\n};\n\nexport const uploadImageForPost = (announcementId, formData) => (dispatch) => {\n    dispatch({ type: LOADING_USER });\n    axios.post(`/announcement/${announcementId}/image`, formData)\n        .then(res => {\n            dispatch({\n                type: APPEND_IMAGEURL_TO_ANNOUNCEMENT,\n                payload: res.data.imageUrl\n            })\n        })\n        .catch(err => console.log(err))\n};\n","import React, {Component, Fragment} from 'react';\nimport { connect } from \"react-redux\";\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {clearErrors, postAnnouncement} from \"../../redux/actions/dataActions\";\nimport PropTypes from \"prop-types\";\n\n// MUI\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Icon\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport MyButton from \"../../util/MyButton\";\n\nconst styles = (theme) => ({\n    ...theme.rootStyles,\n    submitButton: {\n        margin: \"10px auto 10px auto\",\n        position: \"relative\",\n        float: \"right\"\n    },\n    progressSpinner: {\n        position: \"absolute\"\n    }\n});\n\nclass PostAnnouncement extends Component {\n    state = {\n        open: false,\n        body: \"\",\n        errors: {}\n    };\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.UI.errors) {\n            this.setState({\n                errors: nextProps.UI.errors\n            })\n        }\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\n            this.setState({\n                body: \"\",\n                open: false\n            });\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({open: true})\n    };\n\n    handleClose = () => {\n        this.props.clearErrors();\n        this.setState({\n            open: false,\n            errors: {}\n        })\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.postAnnouncement({body: this.state.body});\n    };\n\n    render() {\n        const { errors } = this.state;\n        const { classes, UI: { loading }} = this.props;\n\n        return (\n            <Fragment>\n                <MyButton\n                    onClick={this.handleOpen}\n                    tip=\"Post an Announcement!\">\n                    <AddIcon/>\n                </MyButton>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"md\">\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\n                        <CloseIcon/>\n                    </MyButton>\n                    <DialogTitle>\n                        Post a new announcement\n                    </DialogTitle>\n                    <DialogContent>\n                        <form onSubmit={this.handleSubmit}>\n                            <TextField\n                                name={\"body\"}\n                                type=\"text\"\n                                label=\"Content\"\n                                multiline\n                                placeholder=\"Announcement content with markdown\"\n                                error={!!errors.body}\n                                helperText={errors.body}\n                                className={classes.textField}\n                                onChange={this.handleChange}\n                                fullWidth\n                                rows=\"6\"\n                                rowsMax=\"12\"\n                            />\n                            <Button type=\"submit\" variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submitButton}\n                                    disabled={loading}>\n                                Submit\n                                {loading && (\n                                    <CircularProgress\n                                        size={30}\n                                        className={classes.progressSpinner}\n                                    />\n                                )}\n\n                            </Button>\n                        </form>\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nPostAnnouncement.propTypes = {\n    postAnnouncement: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, { postAnnouncement, clearErrors })(withStyles(styles)(PostAnnouncement));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from \"react-router-dom\";\n\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\n// MUI\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Badge from '@material-ui/core/Badge';\nimport Typography from \"@material-ui/core/Typography\";\n\n// Icons\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { markNotificationsRead } from '../../redux/actions/userActions';\n\n\nclass Notifications extends Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleOpen = (event) => {\n        this.setState({anchorEl: event.target});\n    };\n\n    handleClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    onMenuOpened = () => {\n        let unreadNotificationIds = this.props.notifications\n            .filter(n => !n.read)\n            .map(n => n.notificationId);\n\n        this.props.markNotificationsRead(unreadNotificationIds)\n    };\n    render() {\n        const notifications = this.props.notifications;\n        const anchorEl = this.state.anchorEl;\n        dayjs.extend(relativeTime);\n\n        let notificationIcon;\n\n        if (notifications && notifications.length > 0) {\n            let unreadCount = notifications.filter(n => n.read === false).length;\n            unreadCount > 0 ? (\n                notificationIcon = (\n                    <Badge\n                        badgeContent={unreadCount}\n                        color=\"secondary\"\n                    >\n                        <NotificationsIcon />\n                    </Badge>\n                )\n            ) : (\n                notificationIcon = <NotificationsIcon />\n            )\n        } else {\n            notificationIcon = <NotificationsIcon />\n        }\n\n        let notificationsMarkup = notifications && notifications.length > 0 ? (\n            notifications.map(n => {\n                const verb = n.type === \"like\" ? \"liked\" : \"commented on\";\n                const time = dayjs(n.createdAt).fromNow();\n                const iconColor = n.read ? \"primary\" : \"secondary\";\n                const icon = n.type === \"like\" ? (\n                    <FavoriteIcon color={iconColor} style={{marginRight: 10}}/>\n                ) : (\n                    <ChatIcon color={iconColor} style={{marginRight: 10}}/>\n                );\n\n                return (\n                    <MenuItem key={n.createdAt} onClick={this.handleClose}>\n                        {icon}\n                        <Typography\n                            component={Link}\n                            color=\"default\"\n                            variant=\"body1\"\n                            to={`/users/${n.recipient}/announcement/${n.announcementId}`}>\n                            {n.sender} {verb} your announcement {time}\n                        </Typography>\n                    </MenuItem>\n                )\n            })\n        ) : (\n            <MenuItem onClick={this.handleClose}>\n                You have no notifications yet\n            </MenuItem>\n        );\n\n        return (\n            <Fragment>\n                <Tooltip placement=\"top\" title=\"Notifications\">\n                    <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined}\n                                aria-haspopup=\"true\"\n                                onClick={this.handleOpen}\n                                >\n                        {notificationIcon}\n                    </IconButton>\n                </Tooltip>\n                <Menu\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleClose}\n                    onEntered={this.onMenuOpened}\n                >\n                    {notificationsMarkup}\n                </Menu>\n            </Fragment>\n        )\n    }\n}\n\nNotifications.propTypes = {\n    markNotificationsRead: PropTypes.func.isRequired,\n    notifications: PropTypes.array.isRequired,\n\n};\n\nconst mapStateToProps = state => ({\n    notifications: state.user.notifications\n});\n\nexport default connect(mapStateToProps, { markNotificationsRead })(Notifications);","import React, {Component, Fragment} from 'react';\nimport { connect } from \"react-redux\";\n\n// MUI stuff\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Link } from 'react-router-dom';\nimport PropTyes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport PostAnnouncement from \"../announcement/PostAnnouncement\";\nimport Notifications from \"./Notifications\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst styles = {};\n\nclass Navbar extends Component {\n    render() {\n        const {\n            authenticated,\n            isAnnouncementProvider\n        } = this.props;\n\n        return (\n            <AppBar>\n                <Toolbar className=\"nav-container\">\n                    {authenticated ? (\n                        <Fragment>\n                            { !!isAnnouncementProvider ? <PostAnnouncement /> : <div/>}\n                            <Link to=\"/\">\n                                <MyButton tip=\"Home\">\n                                    <HomeIcon/>\n                                </MyButton>\n                            </Link>\n                            <Notifications/>\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <Link to=\"/login\">\n                                <MyButton tip=\"Account login\">\n                                    <AccountCircleIcon />\n                                </MyButton>\n\n                            </Link>\n                            <Link to=\"/\">\n                                <MyButton tip=\"Home\">\n                                    <HomeIcon/>\n                                </MyButton>\n                            </Link>\n                        </Fragment>\n                    )}\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nNavbar.propTypes = {\n    authenticated: PropTyes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.user.authenticated,\n    isAnnouncementProvider: state.user.credentials.isAnnouncementProvider\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Navbar))","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) => authenticated === true ? <Redirect to='/'/> : <Component {...props}/>}\n        />\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps)(AuthRoute);","import React, {Component, Fragment} from 'react';\nimport { connect } from \"react-redux\";\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from \"prop-types\";\n\n// MUI\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Icon\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ImageIcon from '@material-ui/icons/Image';\n\nimport MyButton from \"../../util/MyButton\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\n// Redux\nimport {getAnnouncement, updateAnnouncement, clearErrors, uploadImageForPost} from \"../../redux/actions/dataActions\";\n\nconst styles = (theme) => ({\n    ...theme.rootStyles,\n    avatar: {\n        height: \"80%\",\n        width: \"80%\"\n    },\n    dialogContent: {\n        padding: 20\n    },\n    expandButton: {\n        float: \"right\"\n    },\n    spinnerDiv: {\n        textAlign: \"center\",\n        marginTo: 50,\n        marginBottom: 50\n    },\n    submitButton: {\n        margin: \"10px auto 10px auto\",\n        position: \"relative\",\n        float: \"right\"\n    },\n    toolButton: {\n        margin: \"10px auto 10px auto\",\n        position: \"relative\",\n        float: \"left\"\n    },\n});\n\nclass EditAnnouncement extends Component {\n    state = {\n        open: false,\n        oldPath: \"\",\n        newPath: \"\",\n        errors: {},\n        body: \"\"\n    };\n\n    constructor(props) {\n        super(props);\n        this.imageButtonRef = React.createRef();\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.UI.errors) {\n            this.setState({\n                errors: nextProps.UI.errors\n            })\n        }\n        if (nextProps.announcement.body) {\n            this.setState({ body: nextProps.announcement.body })\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.openDialog) {\n            this.handleOpen();\n        }\n    }\n\n    handleOpen = () => {\n        let oldPath = window.location.pathname;\n        const { userHandle, announcementId } = this.props;\n        const newPath = `/users/${userHandle}/announcement/${announcementId}`;\n\n        if (oldPath === newPath) {\n            oldPath = `/users/${userHandle}`;\n        }\n        window.history.pushState(null, null, newPath);\n\n        this.setState({ open: true, oldPath, newPath });\n        this.props.getAnnouncement(this.props.announcementId);\n    };\n\n    handleClose = () => {\n        window.history.pushState(null, null, this.state.oldPath);\n        this.setState({ open: false });\n        this.props.clearErrors();\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.updateAnnouncement(this.props.announcementId, this.state.body);\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    handleImageChange = (event) => {\n        const image = event.target.files[0];\n        const formData = new FormData();\n        formData.append(\"image\", image, image.name);\n        this.props.uploadImageForPost(this.props.announcementId, formData);\n    };\n\n    handleEditPicture = () => {\n        this.imageButtonRef.current.click();\n    };\n\n    render() {\n        const {\n            classes,\n            UI: { loading }\n        } = this.props;\n\n        const { body, errors } = this.state;\n\n        const dialogMarkup = loading ? (\n            <div className={classes.spinnerDiv}>\n                <CircularProgress size={200}/>\n            </div>\n\n        ) : (\n            <form onSubmit={this.handleSubmit}>\n                <TextField\n                    name={\"body\"}\n                    type=\"text\"\n                    label=\"Content\"\n                    multiline\n                    placeholder=\"Announcement content with markdown\"\n                    error={!!errors.body}\n                    helperText={errors.body}\n                    className={classes.textField}\n                    onChange={this.handleChange}\n                    fullWidth\n                    value={body}\n                    rows=\"6\"\n                    rowsMax=\"12\"\n                />\n                <input\n                    type=\"file\"\n                    id=\"imageInput\"\n                    hidden=\"hidden\"\n                    onChange={this.handleImageChange}\n                    ref={this.imageButtonRef}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.toolButton}\n                    disabled={loading}\n                    onClick={this.handleEditPicture}\n                >\n                    <ImageIcon />\n\n                </Button>\n\n                <Button type=\"submit\" variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submitButton}\n                        disabled={loading}>\n                    Submit\n                    {loading && (\n                        <CircularProgress\n                            size={30}\n                            className={classes.progressSpinner}\n                        />\n                    )}\n\n                </Button>\n            </form>\n        );\n        return (\n            <Fragment>\n                <MyButton onClick={this.handleOpen} tip=\"Edit announcement\" tipClassName={classes.expandButton}>\n                    <EditIcon color=\"primary\" />\n                </MyButton>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"md\">\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\n                        <CloseIcon/>\n                    </MyButton>\n                    <DialogContent className={classes.dialogContent}>\n                        {dialogMarkup}\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nEditAnnouncement.propTypes = {\n    getAnnouncement: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    announcementId: PropTypes.string.isRequired,\n    userHandle: PropTypes.string.isRequired,\n    announcement: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    announcement: state.data.announcement,\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n    getAnnouncement, updateAnnouncement, uploadImageForPost, clearErrors })(withStyles(styles)(EditAnnouncement));","import React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\n\nimport { connect } from \"react-redux\";\nimport { deleteAnnouncement } from \"../../redux/actions/dataActions\";\nimport MyButton from \"../../util/MyButton\";\n\n// MUI\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\n\nconst styles = {\n\n};\n\nclass DeleteAnnouncement extends Component {\n    state = {\n        open: false\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    };\n\n    handleClose = () => {\n        this.setState({ open: false })\n    };\n\n    deleteAnnouncement = () => {\n        this.props.deleteAnnouncement(this.props.announcementId);\n        this.handleClose();\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n                <MyButton tip=\"Delete Announcement\"\n                          onClick={this.handleOpen}\n                          btnClassName={classes.deleteButton}\n                >\n                    <DeleteOutline color=\"primary\"/>\n                </MyButton>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                    >\n                    <DialogTitle>\n                        Are you sure you want to delete this announcement?\n                    </DialogTitle>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.deleteAnnouncement} color=\"secondary\">\n                            Delete\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nDeleteAnnouncement.propTypes = {\n    deleteAnnouncement: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired,\n    announcementId: PropTypes.string.isRequired\n};\n\nexport default connect(null, { deleteAnnouncement })(withStyles(styles)(DeleteAnnouncement));","import React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\n\nimport { connect } from \"react-redux\";\nimport { archiveAnnouncement } from \"../../redux/actions/dataActions\";\nimport MyButton from \"../../util/MyButton\";\n\n// MUI\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport ArchiveOutline from '@material-ui/icons/ArchiveOutlined';\n\nconst styles = {\n\n};\n\nclass ArchiveAnnouncement extends Component {\n    state = {\n        open: false\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    };\n\n    handleClose = () => {\n        this.setState({ open: false })\n    };\n\n    archiveAnnouncement = () => {\n        this.props.archiveAnnouncement(this.props.announcementId);\n        this.handleClose();\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n                <MyButton tip=\"Archive Announcement\"\n                          onClick={this.handleOpen}\n                          btnClassName={classes.archiveButton}\n                >\n                    <ArchiveOutline color=\"primary\"/>\n                </MyButton>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                    >\n                    <DialogTitle>\n                        Are you sure you want to archive this announcement?\n                    </DialogTitle>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.archiveAnnouncement} color=\"secondary\">\n                            Archive\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nArchiveAnnouncement.propTypes = {\n    archiveAnnouncement: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired,\n    announcementId: PropTypes.string.isRequired\n};\n\nexport default connect(null, { archiveAnnouncement })(withStyles(styles)(ArchiveAnnouncement));","export function isListLine(s) {\n    return s.match(/^[0-9]+\\. /) || s.match(/^\\* /)\n}\n\nexport function markdownTextPreProcess(s) {\n    let bodyFinal = \"\";\n    let prevLine = \"\";\n    s.split(\"\\n\").forEach(rawLine => {\n        const line = rawLine.trim();\n        if (!isListLine(prevLine) && isListLine(line)) {\n            bodyFinal += \"\\n\"\n        }\n        bodyFinal += line.replace(\"。\", \" 。 \") + \"\\n\";\n        prevLine = line;\n    });\n\n    return bodyFinal;\n}","import ShareIcon from '@material-ui/icons/Share';\n\nimport React, {Component} from 'react';\nimport MyButton from \"../../util/MyButton\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = (theme) => ({\n    ...theme.rootStyles\n});\n\nclass ShareButton extends Component {\n    handleShare = () => {\n        const { content } = this.props;\n\n        const shareData = {\n            title: 'H2 App',\n            text: content,\n            url: `https://ekch2h2.github.io/h2-app/?content=${encodeURIComponent(content)}`\n        };\n\n        try {\n            navigator.share(shareData);\n            console.log(\"Shared successfully\")\n        } catch(err) {\n            console.log(\"Share failed\")\n        }\n    };\n\n    canShare = () => {\n        try {\n            return navigator.canShare;\n        } catch(err) {\n            return false;\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return this.canShare() ? (\n            <div>\n                <MyButton onClick={this.handleShare} tip=\"Share announcement\" tipClassName={classes.expandButton}>\n                    <ShareIcon color=\"primary\" />\n                </MyButton>\n            </div>) : null;\n    }\n}\n\nexport default withStyles(styles)(ShareButton);","import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport clsx from 'clsx';\nimport EditAnnouncement from \"./EditAnnouncement\";\nimport DeleteAnnouncement from \"./DeleteAnnouncement\";\n// Redux\nimport { connect } from \"react-redux\";\n// MUI\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from '@material-ui/core/Card';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\n// Icons\nimport ArchiveAnnouncement from \"./ArchiveAnnouncement\";\nimport ReactMarkdown from \"react-markdown\";\nimport {markdownTextPreProcess} from \"../../util/markdown_utils\";\nimport Collapse from \"@material-ui/core/Collapse/Collapse\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ShareButton from \"./ShareButton\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = (theme) => ({\n    card: {\n        marginBottom: 20,\n        position: \"relative\"\n    },\n    image: {\n        minWidth: 200\n    },\n    content: {\n        padding: 25,\n        objectFit: \"cover\"\n    },\n    actions: {\n        display: \"block\"\n    },\n    showMoreContainer: {\n        display: \"flex\",\n        'justify-content': \"center\"\n    },\n    markdownContainer: {\n        h2: {\n            fontSize: \"1em\"\n        },\n        '& img': {\n            width: \"100%\"\n        }\n    },\n    showMore : {\n        'border-radius': \"20px\",\n        'margin-top': \"3px\"\n    }\n});\n\nconst collapsedHeightForWideScreen = 150;\nconst collapsedHeightForNarrow = 250;\nconst wideNarrowThresh = 500;\n\nclass Announcement extends Component {\n    state = {\n        expanded: false,\n        dimensions: null\n    };\n\n    constructor(props) {\n        super(props);\n        this.container = React.createRef();\n    }\n\n    toggleExpandContent = () => {\n        this.setState(prevState => ({\n            expanded: !prevState.expanded\n        }))\n    };\n\n    updateContentDimensions() {\n        this.setState({\n            dimensions: {\n                width: this.container.current.offsetWidth,\n                height: this.container.current.offsetHeight,\n            },\n        })\n\n\n    }\n\n    componentDidMount() {\n        this.updateContentDimensions();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.dimensions == null || prevState.dimensions.height !== this.container.current.offsetHeight) {\n            this.updateContentDimensions();\n        }\n    }\n\n    shouldShowMore() {\n        const { dimensions } = this.state;\n        return dimensions && dimensions.height >= this.collapsedHeight();\n    }\n\n    collapsedHeight() {\n        const { dimensions } = this.state;\n        if (dimensions) {\n            return dimensions.width > wideNarrowThresh ?\n                collapsedHeightForWideScreen : collapsedHeightForNarrow;\n        }\n        return collapsedHeightForWideScreen;\n    }\n\n    render() {\n        dayjs.extend(relativeTime);\n\n        const {\n            classes,\n            announcement: {\n                body,\n                createdAt,\n                userImage,\n                userHandle,\n                announcementId\n            },\n            user: {\n                authenticated,\n                credentials: { handle }\n            }\n        } = this.props;\n\n        const { expanded } = this.state;\n\n        const deleteButton = authenticated && userHandle === handle ? (\n            <DeleteAnnouncement announcementId={announcementId}/>\n        ) : null;\n        const editButton = authenticated && userHandle === handle ? (\n            <EditAnnouncement\n                announcementId={announcementId}\n                userHandle={userHandle}\n            />\n        ) : null;\n        const archiveBotton = authenticated && userHandle === handle ? (\n            <ArchiveAnnouncement announcementId={announcementId} userHandle={userHandle} />\n        ) : null;\n        const shareButton = <ShareButton content={body}/>;\n        const actionsMarkup = (\n            <ButtonGroup classes={classes.buttonGroup}>\n                {shareButton}\n                {editButton}\n                {archiveBotton}\n                {deleteButton}\n            </ButtonGroup>\n        );\n        const userLink = (<Typography\n            component={Link}\n            to={`/users/${userHandle}`}\n            color=\"primary\"\n        >\n            {userHandle}\n        </Typography>);\n\n        const showMoreButton = (\n            <div className={clsx(classes.showMoreContainer)}>\n                <Button\n                    onClick={this.toggleExpandContent}\n                    className={clsx(classes.showMore)}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"small\"\n                >\n                    Show {expanded ? \"Less\" : \"More\"}\n                </Button>\n            </div>\n        );\n        return (\n            <Card className={classes.card}>\n                <CardHeader\n                    avatar={\n                        <Avatar\n                            alt={userHandle}\n                            className={classes.avatar}\n                            src={userImage}\n                        >\n                        </Avatar>\n                    }\n                    title={userLink}\n                    subheader={dayjs(createdAt).fromNow()}\n                />\n\n\n                    <CardContent className={classes.content}>\n                        <Collapse\n                            in={expanded}\n                            timeout=\"auto\"\n                            collapsedHeight={`${this.collapsedHeight()}px`}\n                        >\n                            <Typography\n                                id={\"content-\" + announcementId}\n                                ref={this.container}\n                                onLoad={this.updateContentDimensions.bind(this)}\n                            >\n                                <ReactMarkdown\n                                    source={markdownTextPreProcess(body)}\n                                    className={classes.markdownContainer}\n                                />\n                            </Typography>\n                        </Collapse>\n                        {this.shouldShowMore() ? showMoreButton : <div/>}\n\n\n                    </CardContent>\n\n                <CardActions className={classes.actions}>\n                    {actionsMarkup}\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nAnnouncement.propTypes = {\n    user: PropTypes.object.isRequired,\n    announcement: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    openDialog: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    user: state.user\n});\nexport default connect(mapStateToProps)(withStyles(styles)(Announcement));","import React, { Fragment } from 'react';\nimport NoImg from '../images/no-img.png';\nimport PropTypes from 'prop-types';\n\n// MUI\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport withStyle from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n    card: {\n        display: \"flex\",\n        marginBottom: 20\n    },\n    cardContent: {\n        width: \"100%\",\n        flexDirection: \"column\",\n        padding: 25\n    },\n    cover: {\n        minWidth: 200,\n        objectFit: \"cover\"\n    },\n    handle: {\n        width: 60,\n        height: 18,\n        backgroundColor: theme.palette.primary.main,\n        marginBottom: 7\n    },\n    date: {\n        height: 14,\n        width: 100,\n        backgroundColor: \"rgba(0,0,0,0.3)\",\n        marginBottom: 10\n    },\n    fullLine: {\n        height: 15,\n        width: \"90%\",\n        backgroundColor: \"rgba(0,0,0,0.6)\",\n        marginBottom: 10\n    },\n    halfLine: {\n        height: 15,\n        width: \"50%\",\n        backgroundColor: \"rgba(0,0,0,0.6)\",\n        marginBottom: 10\n    }\n\n});\n\nconst AnnouncementSkeleton = (props) => {\n    const { classes } = props;\n    const content = Array\n        .from({ length: 5})\n        .map((item, index) => (\n            <Card className={classes.card} key={index}>\n                <CardMedia className={classes.cover} image={NoImg}/>\n                <CardContent className={classes.cardContent}>\n                    <div className={classes.handle}/>\n                    <div className={classes.date}/>\n                    <div className={classes.fullLine}/>\n                    <div className={classes.fullLine}/>\n                    <div className={classes.halfLine}/>\n\n                </CardContent>\n            </Card>\n        ));\n    return (\n        <Fragment>\n            {content}\n        </Fragment>\n    );\n};\n\n\nAnnouncementSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyle(styles)(AnnouncementSkeleton);","import React, { Component } from 'react'\nimport Announcement from '../components/announcement/Announcement';\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport { getAnnouncements } from \"../redux/actions/dataActions\";\nimport AnnouncementSkeleton from \"../util/AnnouncementSkeleton\";\n\nclass home extends Component {\n    componentDidMount() {\n        this.props.getAnnouncements()\n    }\n\n    render() {\n        const { announcements, loading } = this.props.data;\n\n        return !loading ? (\n            announcements\n                .filter(ann => !ann.isArchived)\n                .map(ann => <Announcement key={ann.announcementId} announcement={ann}/>)\n        ) : <AnnouncementSkeleton />;\n    }\n}\n\nhome.propTypes = {\n    getAnnouncements: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    data: state.data\n});\n\nexport default connect(mapStateToProps, { getAnnouncements })(home)","import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTyes from 'prop-types';\n// MUI stuff\nimport AppIcon from '../images/icon.png';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { loginUser } from \"../redux/actions/userActions\";\n\nconst styles = (theme) => {\n    return {\n        ...theme.rootStyles\n    };\n};\n\nclass login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: []\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.UI.errors) {\n            this.setState({errors: nextProps.UI.errors});\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData, this.props.history)\n    };\n\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    render() {\n        const { classes, UI: { loading } } = this.props;\n        const { errors } = this.state;\n\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                    <img src={AppIcon} alt=\"h2\" className={classes.image} />\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\n                        Login\n                    </Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField\n                            id=\"email\"\n                            name=\"email\"\n                            label=\"Email\"\n                            className={classes.textField}\n                            helperText={errors.email}\n                            error={!!errors.email}\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            fullWidth\n                        />\n                        <TextField\n                            id=\"password\"\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            className={classes.textField}\n                            helperText={errors.password}\n                            error={!!errors.password}\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                            fullWidth\n                        />\n                        {errors.general && (\n                            <Typography variant=\"body2\"\n                                        className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n\n                        )}\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            disabled={loading}\n                        >\n                            Login\n                            {loading && (\n                                <CircularProgress className={classes.progress} size={30}/>\n                            )}\n                        </Button>\n                        <br/>\n                        <small>don't have an account ? signup <Link to=\"/signup\">here</Link></small>\n                    </form>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        )\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTyes.object.isRequired,\n    loginUser: PropTyes.func.isRequired,\n    // user: PropTyes.object.isRequired,\n    UI: PropTyes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    // user: state.user,\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, { loginUser })(withStyles(styles)(login))","import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTyes from 'prop-types';\nimport AppIcon from '../images/icon.png';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// Redux\nimport { connect } from 'react-redux';\nimport { signupUser } from \"../redux/actions/userActions\";\n\nconst styles = (theme) => {\n    return {\n        ...theme.rootStyles\n    };\n};\n\nclass signup extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            handle: \"\",\n            errors: []\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.UI.errors) {\n            this.setState({ errors: nextProps.UI.errors });\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({\n            loading: true\n        });\n\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            handle: this.state.handle\n        };\n\n        this.props.signupUser(newUserData, this.props.history);\n    };\n\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    render() {\n        const { classes, UI: { loading } } = this.props;\n        const { errors } = this.state;\n\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                    <img src={AppIcon} alt=\"h2\" className={classes.image} />\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\n                        Signup\n                    </Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField\n                            id=\"email\"\n                            name=\"email\"\n                            label=\"Email\"\n                            className={classes.textField}\n                            helperText={errors.email}\n                            error={!!errors.email}\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            fullWidth\n                        />\n                        <TextField\n                            id=\"password\"\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            className={classes.textField}\n                            helperText={errors.password}\n                            error={!!errors.password}\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                            fullWidth\n                        />\n                        <TextField\n                            id=\"confirmPassword\"\n                            name=\"confirmPassword\"\n                            label=\"Confirm Password\"\n                            type=\"password\"\n                            className={classes.textField}\n                            helperText={errors.password}\n                            error={!!errors.confirmPassword}\n                            value={this.state.confirmPassword}\n                            onChange={this.handleChange}\n                            fullWidth\n                        />\n                        <TextField\n                            id=\"handle\"\n                            name=\"handle\"\n                            label=\"Username\"\n                            type=\"text\"\n                            className={classes.textField}\n                            helperText={errors.handle}\n                            error={!!errors.handle}\n                            value={this.state.handle}\n                            onChange={this.handleChange}\n                            fullWidth\n                        />\n                        {errors.general && (\n                            <Typography variant=\"body2\"\n                                        className={classes.customError}>\n                                {errors.general}\n                            </Typography>\n\n                        )}\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            disabled={loading}\n                        >\n                            Login\n                            {loading && (\n                                <CircularProgress className={classes.progress} size={30}/>\n                            )}\n                        </Button>\n                        <br/>\n                        <small>Already have an account ? login <Link to=\"/login\">here</Link></small>\n                    </form>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        )\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTyes.object.isRequired,\n    user: PropTyes.object.isRequired,\n    UI: PropTyes.object.isRequired,\n    logoutUser: PropTyes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, { signupUser })(withStyles(styles)(signup));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport NoImg from '../images/no-img.png';\n// MUI\nimport Paper from '@material-ui/core/Paper';\n// Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\n\nconst styles = theme => ({\n    ...theme.rootStyles,\n    handle: {\n        height: 20,\n        backgroundColor: theme.palette.primary.main,\n        width: 60,\n        margin: \"0 auto 7px auto\"\n    },\n    fullLine: {\n        height: 15,\n        backgroundColor: \"rgba(0,0,0,0.6)\",\n        width: \"100%\",\n        marginBottom: 10\n    },\n    halfLine: {\n        height: 15,\n        backgroundColor: \"rgba(0,0,0,0.6)\",\n        width: \"50%\",\n        marginBottom: 10\n    }\n});\n\nconst ProfileSkeleton = (props) => {\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.paper}>\n            <div className={classes.profile}>\n                <div className=\"image-wrapper\">\n                    <img src={NoImg} alt={\"profile\"} className=\"profile-image\"/>\n                </div>\n                <hr/>\n                <div className=\"profile-details\">\n                    <div className={classes.handle}/>\n                    <hr/>\n                    <div className={classes.fullLine}/>\n                    <div className={classes.fullLine}/>\n                    <hr/>\n                    <LocationOn color=\"primary\"/><span>Location</span>\n                    <hr/>\n                    <LinkIcon color=\"primary\"/>https://website.com\n                    <hr/>\n                    <CalendarToday color=\"primary\"/>Join date\n                </div>\n            </div>\n        </Paper>\n    )\n\n};\n\nProfileSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProfileSkeleton);","import React, {Component, Fragment} from 'react';\nimport { connect } from \"react-redux\";\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { editUserDetails } from \"../../redux/actions/userActions\";\nimport PropTypes from \"prop-types\";\n\n// MUI\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// Icon\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport MyButton from \"../../util/MyButton\";\n\nconst styles = (theme) => ({\n    ...theme.rootStyles,\n    button: {\n        float: \"right\"\n    }\n});\n\nclass EditDetails extends Component {\n    state = {\n        bio: \"\",\n        website: \"\",\n        location: \"\",\n        open: false\n    };\n\n    componentDidMount() {\n        const { credentials } = this.props;\n        this.mapUserDetailsToState(credentials);\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n    };\n\n    mapUserDetailsToState = (credentials) => {\n        this.setState({\n            bio: credentials.bio ? credentials.bio : \"\",\n            website: credentials.website ? credentials.website : \"\",\n            location: credentials.location ? credentials.location : \"\",\n        })\n    };\n\n    handleOpen = () => {\n        this.setState({open: true});\n        this.mapUserDetailsToState(this.props.credentials);\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    handleSubmit = () => {\n        const userDetails = {\n            bio: this.state.bio,\n            website: this.state.website,\n            location: this.state.location,\n        };\n        this.props.editUserDetails(userDetails);\n        this.handleClose();\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n                <MyButton tip=\"Edit details\" onClick={this.handleOpen} btnClassName={classes.button}>\n                    <EditIcon color=\"primary\"/>\n                </MyButton>\n\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                >\n                    <DialogTitle>Edit your details</DialogTitle>\n                    <DialogContent>\n                        <form>\n                            <TextField\n                                name=\"bio\"\n                                type=\"text\"\n                                label=\"Bio\"\n                                multiline\n                                rows=\"3\"\n                                placeholder=\"A short bio of yourself\"\n                                className={classes.textField}\n                                value={this.state.bio}\n                                onChange={this.handleChange}\n                                fullWidth\n                            />\n                            <TextField\n                                name=\"website\"\n                                type=\"text\"\n                                label=\"Website\"\n                                multiline\n                                placeholder=\"Your personal website\"\n                                className={classes.textField}\n                                value={this.state.website}\n                                onChange={this.handleChange}\n                                fullWidth\n                            />\n                            <TextField\n                                name=\"location\"\n                                type=\"text\"\n                                label=\"Location\"\n                                multiline\n                                placeholder=\"Where you live\"\n                                className={classes.textField}\n                                value={this.state.location}\n                                onChange={this.handleChange}\n                                fullWidth\n                            />\n                        </form>\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} color=\"primary\">\n                            Submit\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nEditDetails.propTypes = {\n    editUserDetails: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    credentials: state.user.credentials\n});\n\nexport default connect(mapStateToProps, { editUserDetails })(withStyles(styles)(EditDetails));","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\n\n// MUI\nimport Button from '@material-ui/core/Button';\nimport Paper from \"@material-ui/core/Paper\";\nimport MuiLink from '@material-ui/core/Link';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from '@material-ui/core/Typography';\n// Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\nimport EditIcon from \"@material-ui/icons/Edit\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { logoutUser, uploadImage } from \"../../redux/actions/userActions\";\nimport KeyboardReturn from \"@material-ui/icons/KeyboardReturn\";\nimport EditDetails from \"./EditDetails\";\nimport MyButton from \"../../util/MyButton\";\nimport ProfileSkeleton from \"../../util/ProfileSkeleton\";\n\nconst styles = (theme) => ({\n    ...theme.rootStyles\n});\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.imageButtonRef = React.createRef();\n    }\n\n    handleImageChange = (event) => {\n        const image = event.target.files[0];\n        const formData = new FormData();\n        formData.append(\"image\", image, image.name);\n        this.props.uploadImage(formData);\n    };\n\n    handleEditPicture = () => {\n        this.imageButtonRef.current.click();\n    };\n\n    handleLogout = () => {\n        this.props.logoutUser()\n    };\n    render() {\n        const {\n            classes,\n            user: {\n                credentials: { handle, createdAt, imageUrl, bio, website, location },\n                loading,\n                authenticated\n            }\n        } = this.props;\n\n\n        return !loading ? (authenticated ? (\n            <Paper className={classes.paper}>\n                <div className={classes.profile}>\n                    <div className=\"image-wrapper\">\n                        <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\n                        <input\n                            type=\"file\"\n                            id=\"imageInput\"\n                            hidden=\"hidden\"\n                            onChange={this.handleImageChange}\n                            ref={this.imageButtonRef}\n                        />\n                        <MyButton\n                            tip=\"Edit profile picture\"\n                            onClick={this.handleEditPicture}\n                            btnClassName=\"button\"\n                        >\n                            <EditIcon color=\"primary\"/>\n                        </MyButton>\n\n                    </div>\n                    <hr/>\n                    <div className=\"profile-details\">\n                        <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\n                            @{handle}\n                        </MuiLink>\n                        {bio && <Typography variant=\"body2\">{bio}</Typography> }\n                        <hr />\n                        {location && (\n                            <Fragment>\n                                <LocationOn color=\"primary\"/>\n                                <span>{location}</span>\n                            </Fragment>\n\n                        )}\n                        <hr />\n                        {website && (\n                            <Fragment>\n                                <LinkIcon color=\"primary\" />\n                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {\"  \"}{website}\n                                </a>\n                            </Fragment>\n                        )}\n                        <hr />\n                        <CalendarToday color=\"primary\" />{\"  \"}\n                        <span>Joined {dayjs(createdAt).format(\"MMM YYYY\")}</span>\n                    </div>\n                </div>\n                <Tooltip title=\"Logout\" placement=\"top\">\n                    <MyButton\n                        tip=\"Logout\"\n                        onClick={this.handleLogout}\n                    >\n                        <KeyboardReturn color=\"primary\"/>\n                    </MyButton>\n\n                </Tooltip>\n\n                <EditDetails />\n            </Paper>\n        ) : (\n\n            <Paper className={classes.paper}>\n                <Typography variant=\"body2\" aligh=\"center\">\n                    No profile found, please login again\n                </Typography>\n                <div className={classes.buttons}>\n                    <Button variant=\"contained\" color=\"primary\" component={Link} to={\"/login\"}>\n                        Login\n                    </Button>\n                    <Button variant=\"contained\" color=\"secondary\" component={Link} to={\"/signup\"}>\n                        Signup\n                    </Button>\n                </div>\n            </Paper>\n        )) : (<ProfileSkeleton />);\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n});\n\nProfile.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    uploadImage: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, { logoutUser, uploadImage })(withStyles(styles)(Profile));","import React, { Component } from 'react'\nimport PropTyes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\n// Redux\nimport { connect } from 'react-redux';\nimport { getUserData } from \"../redux/actions/dataActions\";\nimport axios from \"axios\";\nimport Announcement from \"../components/announcement/Announcement\";\nimport AnnouncementSkeleton from \"../util/AnnouncementSkeleton\";\nimport ProfileSkeleton from \"../util/ProfileSkeleton\";\nimport Profile from \"../components/profile/Profile\";\n\nclass user extends Component {\n    state = {\n        profile: {},\n        announcementIdParam: null\n    };\n\n    componentDidMount() {\n        const handle = this.props.match.params.handle;\n        const announcementId = this.props.match.params.announcementId;\n\n        if (announcementId) {\n            this.setState({ announcementIdParam: announcementId})\n        }\n        this.props.getUserData(handle);\n        axios.get(`/user/${handle}`)\n            .then(res => {\n                this.setState({\n                    profile: res.data.user\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        const { announcements, loading } = this.props.data;\n        const { announcementIdParam } = this.state;\n\n        const announcementsMarkup = loading ? (\n            <AnnouncementSkeleton />\n            ) : announcements === null ? (\n                <p>No announcements from this user</p>\n            ) : !announcementIdParam ? (\n                announcements.map(ann => <Announcement key={ann.announcementId} announcement={ann} />)\n            ) : (\n                announcements.map(ann => {\n                    if (ann.announcementId !== announcementIdParam) {\n                        return <Announcement key={ann.announcementId} announcement={ann} />;\n                    } else {\n                        return <Announcement key={ann.announcementId} announcement={ann} openDialog={true} />;\n                    }\n\n                })\n            );\n        return (\n            <Grid container spacing={10}>\n                <Grid item sm={8} xs={12}>\n                    {announcementsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    {!this.state.profile ? (\n                        <ProfileSkeleton />\n                    ) : (\n                        <Profile />\n                    )}\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nuser.propTypes = {\n    data: PropTyes.object.isRequired,\n    getUserData: PropTyes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    data: state.data,\n    UI: state.UI\n});\n\nexport default connect(mapStateToProps, { getUserData })(user);","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport themeFile from './util/theme';\nimport axios from 'axios';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { getUserData } from \"./redux/actions/userActions\";\n\n// Components\nimport Navbar from './components/layout/Navbar';\nimport AuthRoute from './util/AuthRoute';\n\n// Pages\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\nimport user from './pages/user';\n// This import loads the firebase namespace along with all its type information.\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { setAuthorizationHeader } from \"./util/auth\";\n\nconst theme = createMuiTheme(themeFile);\n\n// // Initialize Firebase\nfirebase.initializeApp({apiKey: \"AIzaSyCCx9TDJtVzEaPym1OyU5KSuWgwslGDzEY\"});\n\nfirebase.auth().onAuthStateChanged(usr => {\n    if (usr) {\n        usr.getIdToken().then(token => {\n            setAuthorizationHeader(token);\n            store.dispatch(getUserData());\n        })\n    }\n});\n\naxios.defaults.baseURL = \"https://us-central1-h2-app.cloudfunctions.net/api\";\n// axios.defaults.baseURL = \"http://localhost:5000/h2-app/us-central1/api\";\n\nfunction App() {\n  return (\n      <MuiThemeProvider theme={theme}>\n          <Provider store={store}>\n              <Router basename={process.env.PUBLIC_URL}>\n                  <Navbar/>\n                  <div className=\"container\">\n                      <Switch>\n                          <Route exact path=\"/\" component={home} />\n                          <AuthRoute exact path=\"/login\" component={login}/>\n                          <AuthRoute exact path=\"/signup\" component={signup}/>\n                          <Route exact path=\"/users/:handle\" component={user}/>\n                          <Route exact path=\"/users/:handle/announcement/:announcementId\" component={user}/>\n                      </Switch>\n                  </div>\n              </Router>\n          </Provider>\n      </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}